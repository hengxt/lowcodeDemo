{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "addCustomer",
    "fullyQualifiedName": "utils.addCustomer",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Customers",
    "collectionId": "Customers_utils",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  const person = await createPerson.run();\n  await createAccount.run({\n    personId: person[0].id\n  });\n  await createLocation.run({\n    personId: person[0].id\n  });\n  closeModal('mdl_addCustomer');\n  await utils.getCustomers();\n  showAlert('Customer created!', 'success');\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  const person = await createPerson.run();\n  await createAccount.run({\n    personId: person[0].id\n  });\n  await createLocation.run({\n    personId: person[0].id\n  });\n  closeModal('mdl_addCustomer');\n  await utils.getCustomers();\n  showAlert('Customer created!', 'success');\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Customers_utils.addCustomer",
  "deleted": false,
  "gitSyncId": "6461835dde5d5825c7ae7adf_2023-05-15T00:57:39.844115Z"
}